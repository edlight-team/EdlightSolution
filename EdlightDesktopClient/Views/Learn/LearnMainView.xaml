<UserControl x:Class="EdlightDesktopClient.Views.Learn.LearnMainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:controls="clr-namespace:Styles.Controls;assembly=Styles"
             xmlns:behaviors="clr-namespace:Styles.Behaviors;assembly=Styles"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:vm="clr-namespace:EdlightDesktopClient.ViewModels.Learn"
             d:DataContext="{d:DesignInstance vm:LearnMainViewModel}"
             behaviors:LoadedBehavior.Command="{Binding LoadedCommand}"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="55" />
            <RowDefinition Height="1" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <controls:LoaderBox Grid.Row="0"
                            Grid.RowSpan="3"
                            Panel.ZIndex="{Binding TestLoader.PanelIndex, UpdateSourceTrigger=PropertyChanged}"
                            IsActive="{Binding TestLoader.IsActive, UpdateSourceTrigger=PropertyChanged}"
                            Message="{Binding TestLoader.Message, UpdateSourceTrigger=PropertyChanged}" />

        <Border Grid.Row="0"
                Grid.RowSpan="3"
                Panel.ZIndex="1"
                BorderBrush="{DynamicResource ActiveBackgroundTabHeaderBtush}"
                BorderThickness="1"
                CornerRadius="0,15,15,15" />

        <hc:ComboBox Grid.Row="0"
                     Margin="25,0,0,0"
                     Width="200"
                     IsEnabled="{Binding Config.CanSetTestFilter}"
                     ItemsSource="{Binding Groups}"
                     SelectedItem="{Binding SelectedGroup}"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Center">
            <hc:ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Group}"/>
                </DataTemplate>
            </hc:ComboBox.ItemTemplate>
        </hc:ComboBox>

        <Border Grid.Row="1" Background="{DynamicResource ActiveBackgroundTabHeaderBtush}"/>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="1" />
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="1" Background="{DynamicResource ActiveBackgroundTabHeaderBtush}"/>

            <ScrollViewer Grid.Column="0"
                          Padding="5">
                <ItemsControl ItemsSource="{Binding FilteredTestCards.View, UpdateSourceTrigger=PropertyChanged}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="3" VerticalAlignment="Top"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <hc:Card Height="160"
                                     Margin="5, 5, 5, 5"
                                     Background="{DynamicResource TestCardBackgrounBrush}"
                                     behaviors:MouseLeftButtonDown.Command="{Binding DataContext.CardClickCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"
                                     behaviors:MouseLeftButtonDown.CommandParameter="{Binding}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="2*"/>
                                        <RowDefinition Height="4*"/>
                                        <RowDefinition Height="2*"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="1"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               TextAlignment="Center"
                                               FontSize="25"
                                               TextWrapping="Wrap"
                                               Text="{Binding TestName}"/>
                                    <ContentControl Grid.Row="0"
                                                    HorizontalAlignment="Right"
                                                    Margin="0, 5, 10, 0"
                                                    Height="25"
                                                    Width="25"
                                                    Visibility="{Binding DataContext.Config.CanTakeTest, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"
                                                    behaviors:MouseLeftButtonDown.Command="{Binding DataContext.StartTestCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"
                                                    behaviors:MouseLeftButtonDown.CommandParameter="{Binding}"
                                                    Template="{DynamicResource Play}"/>
                                    <Border Grid.Row="0"
                                            Grid.RowSpan="3"
                                            BorderThickness="3"
                                            CornerRadius="3, 3, 3, 3">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelectedCard}" Value="true">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource SelectedTestCardBorderBrush}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsSelectedCard}" Value="false">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource ActiveBackgroundTabHeaderBtush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    <RadioButton Visibility="Collapsed"
                                                 GroupName="cardCheck"
                                                 IsChecked="{Binding IsSelectedCard, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </hc:Card>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0"
                            Orientation="Vertical">
                    <Button Width="160"
                            Margin="0,20,0,10"
                            Visibility="{Binding Config.CanCreateTestRecord}"
                            Command="{Binding AddTestCommand}"
                            Style="{DynamicResource SimpleButtonWithBorder}">
                        <TextBlock HorizontalAlignment="Center"
                                   Style="{DynamicResource SimpleTextBlock}"
                                   Text="Добавить тест" />
                    </Button>
                    <Button Width="160"
                            Margin="0,0,0,10"
                            IsEnabled="{Binding CardSelected}"
                            Visibility="{Binding Config.CanUpdateTestRecord}"
                            Command="{Binding UpdateTestCommand}"
                            Style="{DynamicResource SimpleButtonWithBorder}">
                        <TextBlock HorizontalAlignment="Center"
                                   Style="{DynamicResource SimpleTextBlock}"
                                   Text="Изменить тест"/>
                    </Button>
                    <Button Width="160"
                            Margin="0,0,0,10"
                            IsEnabled="{Binding CardSelected}"
                            Visibility="{Binding Config.CanDeleteTestRecord}"
                            Command="{Binding DeleteTestCommand}"
                            Style="{DynamicResource SimpleButtonWithBorder}">
                        <TextBlock HorizontalAlignment="Center"
                                   Style="{DynamicResource SimpleTextBlock}"
                                   Text="Удалить тест" />
                    </Button>
                    <Button Width="160"
                            Margin="0,0,0,10"
                            IsEnabled="{Binding CardSelected}"
                            Visibility="{Binding Config.CanViewStudentTestResults}"
                            Command="{Binding ViewTestResultsCommand}"
                            Style="{DynamicResource SimpleButtonWithBorder}">
                        <TextBlock HorizontalAlignment="Center"
                                   Style="{DynamicResource SimpleTextBlock}"
                                   Text="Результаты теста"/>
                    </Button>
                </StackPanel>

                <Grid Grid.Row="1" Margin="0, 10, 0, 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="15"/>
                    </Grid.ColumnDefinitions>

                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CardSelected}" Value="true">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CardSelected}" Value="false">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    
                    <Border Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Grid.Row="0"
                            Background="{DynamicResource ActiveBackgroundTabHeaderBtush}"/>
                    <TextBlock Grid.Column="1"
                               Grid.ColumnSpan="2"
                               Grid.Row="1"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="О тесте"/>
                    <Border Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Grid.Row="2"
                            Background="{DynamicResource ActiveBackgroundTabHeaderBtush}"/>

                    <TextBlock Grid.Row="4"
                               Grid.Column="1"
                               Text="Тип:"/>
                    <TextBlock Grid.Row="4"
                               Grid.Column="2"
                               TextWrapping="Wrap"
                               Text="{Binding SelectedCardHeader.TestType}"/>

                    <TextBlock Grid.Row="6"
                               Grid.Column="1"
                               Text="Время:"/>
                    <TextBlock Grid.Row="6"
                               Grid.Column="2"
                               TextWrapping="Wrap"
                               Text="{Binding SelectedCardHeader.TestTime}"/>

                    <TextBlock Grid.Row="8"
                               Grid.Column="1"
                               Text="Вопросов:"/>
                    <TextBlock Grid.Row="8"
                               Grid.Column="2"
                               TextWrapping="Wrap"
                               Text="{Binding SelectedCardHeader.CountQuestions}"/>

                    <TextBlock Grid.Row="10"
                               Grid.Column="1"
                               Text="Начало:"/>
                    <TextBlock Grid.Row="10"
                               Grid.Column="2"
                               TextWrapping="Wrap"
                               Text="{Binding SelectedCardHeader.TestStartDate}"/>

                    <TextBlock Grid.Row="12"
                               Grid.Column="1"
                               Text="Окончание:"/>
                    <TextBlock Grid.Row="12"
                               Grid.Column="2"
                               TextWrapping="Wrap"
                               Text="{Binding SelectedCardHeader.TestEndDate}"/>
                </Grid>

                <Grid Grid.Row="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="15"/>
                    </Grid.ColumnDefinitions>

                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CardSelected}" Value="true">
                                    <Setter Property="Visibility" Value="{Binding Config.CanViewSelfTestResults}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CardSelected}" Value="false">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <Border Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Grid.Row="0"
                            Background="{DynamicResource ActiveBackgroundTabHeaderBtush}"/>
                    <TextBlock Grid.Column="1"
                               Grid.ColumnSpan="2"
                               Grid.Row="1"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="Результаты"/>
                    <Border Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Grid.Row="2"
                            Background="{DynamicResource ActiveBackgroundTabHeaderBtush}"/>

                    <TextBlock Grid.Row="4"
                               Grid.Column="1"
                               Text="Статус:"/>
                    <TextBlock Grid.Row="4"
                               Grid.Column="2"
                               TextWrapping="Wrap">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedTestResult.TestCompleted}" Value="true">
                                        <Setter Property="Text" Value="Тест пройден"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SelectedTestResult.TestCompleted}" Value="false">
                                        <Setter Property="Text" Value="Тест не пройден"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Row="6"
                               Grid.Column="1"
                               Text="Баллы:"/>
                    <TextBlock Grid.Row="6"
                               Grid.Column="2"
                               TextWrapping="Wrap"
                               Text="{Binding SelectedTestResult.CorrectAnswers}"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
